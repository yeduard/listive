// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notifications.Database;

#nullable disable

namespace Notifications.Database.Migrations
{
    [DbContext(typeof(NotificationsContext))]
    [Migration("20230130175422_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Notifications.Database.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("Notifications.Database.Models.NotificationClassification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("NotificationClassifications", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3521bde-2e29-41fc-bd87-e1609029ed16"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 30, 17, 54, 21, 977, DateTimeKind.Unspecified).AddTicks(1280), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Email",
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 1, 30, 17, 54, 21, 977, DateTimeKind.Unspecified).AddTicks(1280), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("23dc14b2-a9e9-497e-9aca-dcb2c48e5aeb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 30, 17, 54, 21, 977, DateTimeKind.Unspecified).AddTicks(1290), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "SMS",
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 1, 30, 17, 54, 21, 977, DateTimeKind.Unspecified).AddTicks(1290), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("08a51fda-aa26-4c3b-91cd-bb87ceadfa41"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 30, 17, 54, 21, 977, DateTimeKind.Unspecified).AddTicks(1290), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Push",
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 1, 30, 17, 54, 21, 977, DateTimeKind.Unspecified).AddTicks(1300), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Notifications.Database.Models.Notification", b =>
                {
                    b.HasOne("Notifications.Database.Models.NotificationClassification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classification");
                });
#pragma warning restore 612, 618
        }
    }
}
